// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mail.proto

#ifndef PROTOBUF_mail_2eproto__INCLUDED
#define PROTOBUF_mail_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)

namespace clientmsg {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_mail_2eproto();
void protobuf_AssignDesc_mail_2eproto();
void protobuf_ShutdownFile_mail_2eproto();

class UserOneMailContent;
class UserOpenMail;
class SendMailContent;
class DelMail;
class ReadMail;
class UserSendMailByid;
class UserSendMailByName;

enum enumMailType {
  enumMailType_Sys = 1,
  enumMailType_RequestAddFriend = 2
};
bool enumMailType_IsValid(int value);
const enumMailType enumMailType_MIN = enumMailType_Sys;
const enumMailType enumMailType_MAX = enumMailType_RequestAddFriend;
const int enumMailType_ARRAYSIZE = enumMailType_MAX + 1;

const ::google::protobuf::EnumDescriptor* enumMailType_descriptor();
inline const ::std::string& enumMailType_Name(enumMailType value) {
  return ::google::protobuf::internal::NameOfEnum(
    enumMailType_descriptor(), value);
}
inline bool enumMailType_Parse(
    const ::std::string& name, enumMailType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<enumMailType>(
    enumMailType_descriptor(), name, value);
}
// ===================================================================

class UserOneMailContent : public ::google::protobuf::Message {
 public:
  UserOneMailContent();
  virtual ~UserOneMailContent();

  UserOneMailContent(const UserOneMailContent& from);

  inline UserOneMailContent& operator=(const UserOneMailContent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserOneMailContent& default_instance();

  void Swap(UserOneMailContent* other);

  // implements Message ----------------------------------------------

  UserOneMailContent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserOneMailContent& from);
  void MergeFrom(const UserOneMailContent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mailid = 1;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailidFieldNumber = 1;
  inline ::google::protobuf::uint32 mailid() const;
  inline void set_mailid(::google::protobuf::uint32 value);

  // optional string content = 2;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 2;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // optional .clientmsg.enumMailType type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::clientmsg::enumMailType type() const;
  inline void set_type(::clientmsg::enumMailType value);

  // optional uint32 isdelete = 4;
  inline bool has_isdelete() const;
  inline void clear_isdelete();
  static const int kIsdeleteFieldNumber = 4;
  inline ::google::protobuf::uint32 isdelete() const;
  inline void set_isdelete(::google::protobuf::uint32 value);

  // optional uint32 isread = 5;
  inline bool has_isread() const;
  inline void clear_isread();
  static const int kIsreadFieldNumber = 5;
  inline ::google::protobuf::uint32 isread() const;
  inline void set_isread(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:clientmsg.UserOneMailContent)
 private:
  inline void set_has_mailid();
  inline void clear_has_mailid();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_isdelete();
  inline void clear_has_isdelete();
  inline void set_has_isread();
  inline void clear_has_isread();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* content_;
  ::google::protobuf::uint32 mailid_;
  int type_;
  ::google::protobuf::uint32 isdelete_;
  ::google::protobuf::uint32 isread_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_mail_2eproto();
  friend void protobuf_AssignDesc_mail_2eproto();
  friend void protobuf_ShutdownFile_mail_2eproto();

  void InitAsDefaultInstance();
  static UserOneMailContent* default_instance_;
};
// -------------------------------------------------------------------

class UserOpenMail : public ::google::protobuf::Message {
 public:
  UserOpenMail();
  virtual ~UserOpenMail();

  UserOpenMail(const UserOpenMail& from);

  inline UserOpenMail& operator=(const UserOpenMail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserOpenMail& default_instance();

  void Swap(UserOpenMail* other);

  // implements Message ----------------------------------------------

  UserOpenMail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserOpenMail& from);
  void MergeFrom(const UserOpenMail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:clientmsg.UserOpenMail)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_mail_2eproto();
  friend void protobuf_AssignDesc_mail_2eproto();
  friend void protobuf_ShutdownFile_mail_2eproto();

  void InitAsDefaultInstance();
  static UserOpenMail* default_instance_;
};
// -------------------------------------------------------------------

class SendMailContent : public ::google::protobuf::Message {
 public:
  SendMailContent();
  virtual ~SendMailContent();

  SendMailContent(const SendMailContent& from);

  inline SendMailContent& operator=(const SendMailContent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendMailContent& default_instance();

  void Swap(SendMailContent* other);

  // implements Message ----------------------------------------------

  SendMailContent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendMailContent& from);
  void MergeFrom(const SendMailContent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .clientmsg.UserOneMailContent mail_contents = 1;
  inline int mail_contents_size() const;
  inline void clear_mail_contents();
  static const int kMailContentsFieldNumber = 1;
  inline const ::clientmsg::UserOneMailContent& mail_contents(int index) const;
  inline ::clientmsg::UserOneMailContent* mutable_mail_contents(int index);
  inline ::clientmsg::UserOneMailContent* add_mail_contents();
  inline const ::google::protobuf::RepeatedPtrField< ::clientmsg::UserOneMailContent >&
      mail_contents() const;
  inline ::google::protobuf::RepeatedPtrField< ::clientmsg::UserOneMailContent >*
      mutable_mail_contents();

  // @@protoc_insertion_point(class_scope:clientmsg.SendMailContent)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::clientmsg::UserOneMailContent > mail_contents_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_mail_2eproto();
  friend void protobuf_AssignDesc_mail_2eproto();
  friend void protobuf_ShutdownFile_mail_2eproto();

  void InitAsDefaultInstance();
  static SendMailContent* default_instance_;
};
// -------------------------------------------------------------------

class DelMail : public ::google::protobuf::Message {
 public:
  DelMail();
  virtual ~DelMail();

  DelMail(const DelMail& from);

  inline DelMail& operator=(const DelMail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelMail& default_instance();

  void Swap(DelMail* other);

  // implements Message ----------------------------------------------

  DelMail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DelMail& from);
  void MergeFrom(const DelMail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 mail_ids = 2;
  inline int mail_ids_size() const;
  inline void clear_mail_ids();
  static const int kMailIdsFieldNumber = 2;
  inline ::google::protobuf::uint32 mail_ids(int index) const;
  inline void set_mail_ids(int index, ::google::protobuf::uint32 value);
  inline void add_mail_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      mail_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_mail_ids();

  // @@protoc_insertion_point(class_scope:clientmsg.DelMail)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > mail_ids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_mail_2eproto();
  friend void protobuf_AssignDesc_mail_2eproto();
  friend void protobuf_ShutdownFile_mail_2eproto();

  void InitAsDefaultInstance();
  static DelMail* default_instance_;
};
// -------------------------------------------------------------------

class ReadMail : public ::google::protobuf::Message {
 public:
  ReadMail();
  virtual ~ReadMail();

  ReadMail(const ReadMail& from);

  inline ReadMail& operator=(const ReadMail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadMail& default_instance();

  void Swap(ReadMail* other);

  // implements Message ----------------------------------------------

  ReadMail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReadMail& from);
  void MergeFrom(const ReadMail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 mail_ids = 1;
  inline int mail_ids_size() const;
  inline void clear_mail_ids();
  static const int kMailIdsFieldNumber = 1;
  inline ::google::protobuf::uint32 mail_ids(int index) const;
  inline void set_mail_ids(int index, ::google::protobuf::uint32 value);
  inline void add_mail_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      mail_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_mail_ids();

  // @@protoc_insertion_point(class_scope:clientmsg.ReadMail)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > mail_ids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_mail_2eproto();
  friend void protobuf_AssignDesc_mail_2eproto();
  friend void protobuf_ShutdownFile_mail_2eproto();

  void InitAsDefaultInstance();
  static ReadMail* default_instance_;
};
// -------------------------------------------------------------------

class UserSendMailByid : public ::google::protobuf::Message {
 public:
  UserSendMailByid();
  virtual ~UserSendMailByid();

  UserSendMailByid(const UserSendMailByid& from);

  inline UserSendMailByid& operator=(const UserSendMailByid& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserSendMailByid& default_instance();

  void Swap(UserSendMailByid* other);

  // implements Message ----------------------------------------------

  UserSendMailByid* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserSendMailByid& from);
  void MergeFrom(const UserSendMailByid& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 remoteid = 1;
  inline bool has_remoteid() const;
  inline void clear_remoteid();
  static const int kRemoteidFieldNumber = 1;
  inline ::google::protobuf::uint64 remoteid() const;
  inline void set_remoteid(::google::protobuf::uint64 value);

  // optional string content = 2;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 2;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // optional .clientmsg.enumMailType type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::clientmsg::enumMailType type() const;
  inline void set_type(::clientmsg::enumMailType value);

  // @@protoc_insertion_point(class_scope:clientmsg.UserSendMailByid)
 private:
  inline void set_has_remoteid();
  inline void clear_has_remoteid();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 remoteid_;
  ::std::string* content_;
  int type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_mail_2eproto();
  friend void protobuf_AssignDesc_mail_2eproto();
  friend void protobuf_ShutdownFile_mail_2eproto();

  void InitAsDefaultInstance();
  static UserSendMailByid* default_instance_;
};
// -------------------------------------------------------------------

class UserSendMailByName : public ::google::protobuf::Message {
 public:
  UserSendMailByName();
  virtual ~UserSendMailByName();

  UserSendMailByName(const UserSendMailByName& from);

  inline UserSendMailByName& operator=(const UserSendMailByName& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserSendMailByName& default_instance();

  void Swap(UserSendMailByName* other);

  // implements Message ----------------------------------------------

  UserSendMailByName* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserSendMailByName& from);
  void MergeFrom(const UserSendMailByName& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string remotename = 1;
  inline bool has_remotename() const;
  inline void clear_remotename();
  static const int kRemotenameFieldNumber = 1;
  inline const ::std::string& remotename() const;
  inline void set_remotename(const ::std::string& value);
  inline void set_remotename(const char* value);
  inline void set_remotename(const char* value, size_t size);
  inline ::std::string* mutable_remotename();
  inline ::std::string* release_remotename();
  inline void set_allocated_remotename(::std::string* remotename);

  // optional string content = 2;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 2;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // optional .clientmsg.enumMailType type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::clientmsg::enumMailType type() const;
  inline void set_type(::clientmsg::enumMailType value);

  // @@protoc_insertion_point(class_scope:clientmsg.UserSendMailByName)
 private:
  inline void set_has_remotename();
  inline void clear_has_remotename();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* remotename_;
  ::std::string* content_;
  int type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_mail_2eproto();
  friend void protobuf_AssignDesc_mail_2eproto();
  friend void protobuf_ShutdownFile_mail_2eproto();

  void InitAsDefaultInstance();
  static UserSendMailByName* default_instance_;
};
// ===================================================================


// ===================================================================

// UserOneMailContent

// optional uint32 mailid = 1;
inline bool UserOneMailContent::has_mailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserOneMailContent::set_has_mailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserOneMailContent::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserOneMailContent::clear_mailid() {
  mailid_ = 0u;
  clear_has_mailid();
}
inline ::google::protobuf::uint32 UserOneMailContent::mailid() const {
  return mailid_;
}
inline void UserOneMailContent::set_mailid(::google::protobuf::uint32 value) {
  set_has_mailid();
  mailid_ = value;
}

// optional string content = 2;
inline bool UserOneMailContent::has_content() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserOneMailContent::set_has_content() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserOneMailContent::clear_has_content() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserOneMailContent::clear_content() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& UserOneMailContent::content() const {
  return *content_;
}
inline void UserOneMailContent::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void UserOneMailContent::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void UserOneMailContent::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UserOneMailContent::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  return content_;
}
inline ::std::string* UserOneMailContent::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UserOneMailContent::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .clientmsg.enumMailType type = 3;
inline bool UserOneMailContent::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserOneMailContent::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserOneMailContent::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserOneMailContent::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::clientmsg::enumMailType UserOneMailContent::type() const {
  return static_cast< ::clientmsg::enumMailType >(type_);
}
inline void UserOneMailContent::set_type(::clientmsg::enumMailType value) {
  assert(::clientmsg::enumMailType_IsValid(value));
  set_has_type();
  type_ = value;
}

// optional uint32 isdelete = 4;
inline bool UserOneMailContent::has_isdelete() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserOneMailContent::set_has_isdelete() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserOneMailContent::clear_has_isdelete() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserOneMailContent::clear_isdelete() {
  isdelete_ = 0u;
  clear_has_isdelete();
}
inline ::google::protobuf::uint32 UserOneMailContent::isdelete() const {
  return isdelete_;
}
inline void UserOneMailContent::set_isdelete(::google::protobuf::uint32 value) {
  set_has_isdelete();
  isdelete_ = value;
}

// optional uint32 isread = 5;
inline bool UserOneMailContent::has_isread() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserOneMailContent::set_has_isread() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserOneMailContent::clear_has_isread() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserOneMailContent::clear_isread() {
  isread_ = 0u;
  clear_has_isread();
}
inline ::google::protobuf::uint32 UserOneMailContent::isread() const {
  return isread_;
}
inline void UserOneMailContent::set_isread(::google::protobuf::uint32 value) {
  set_has_isread();
  isread_ = value;
}

// -------------------------------------------------------------------

// UserOpenMail

// -------------------------------------------------------------------

// SendMailContent

// repeated .clientmsg.UserOneMailContent mail_contents = 1;
inline int SendMailContent::mail_contents_size() const {
  return mail_contents_.size();
}
inline void SendMailContent::clear_mail_contents() {
  mail_contents_.Clear();
}
inline const ::clientmsg::UserOneMailContent& SendMailContent::mail_contents(int index) const {
  return mail_contents_.Get(index);
}
inline ::clientmsg::UserOneMailContent* SendMailContent::mutable_mail_contents(int index) {
  return mail_contents_.Mutable(index);
}
inline ::clientmsg::UserOneMailContent* SendMailContent::add_mail_contents() {
  return mail_contents_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::clientmsg::UserOneMailContent >&
SendMailContent::mail_contents() const {
  return mail_contents_;
}
inline ::google::protobuf::RepeatedPtrField< ::clientmsg::UserOneMailContent >*
SendMailContent::mutable_mail_contents() {
  return &mail_contents_;
}

// -------------------------------------------------------------------

// DelMail

// repeated uint32 mail_ids = 2;
inline int DelMail::mail_ids_size() const {
  return mail_ids_.size();
}
inline void DelMail::clear_mail_ids() {
  mail_ids_.Clear();
}
inline ::google::protobuf::uint32 DelMail::mail_ids(int index) const {
  return mail_ids_.Get(index);
}
inline void DelMail::set_mail_ids(int index, ::google::protobuf::uint32 value) {
  mail_ids_.Set(index, value);
}
inline void DelMail::add_mail_ids(::google::protobuf::uint32 value) {
  mail_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DelMail::mail_ids() const {
  return mail_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DelMail::mutable_mail_ids() {
  return &mail_ids_;
}

// -------------------------------------------------------------------

// ReadMail

// repeated uint32 mail_ids = 1;
inline int ReadMail::mail_ids_size() const {
  return mail_ids_.size();
}
inline void ReadMail::clear_mail_ids() {
  mail_ids_.Clear();
}
inline ::google::protobuf::uint32 ReadMail::mail_ids(int index) const {
  return mail_ids_.Get(index);
}
inline void ReadMail::set_mail_ids(int index, ::google::protobuf::uint32 value) {
  mail_ids_.Set(index, value);
}
inline void ReadMail::add_mail_ids(::google::protobuf::uint32 value) {
  mail_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ReadMail::mail_ids() const {
  return mail_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ReadMail::mutable_mail_ids() {
  return &mail_ids_;
}

// -------------------------------------------------------------------

// UserSendMailByid

// optional uint64 remoteid = 1;
inline bool UserSendMailByid::has_remoteid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserSendMailByid::set_has_remoteid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserSendMailByid::clear_has_remoteid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserSendMailByid::clear_remoteid() {
  remoteid_ = GOOGLE_ULONGLONG(0);
  clear_has_remoteid();
}
inline ::google::protobuf::uint64 UserSendMailByid::remoteid() const {
  return remoteid_;
}
inline void UserSendMailByid::set_remoteid(::google::protobuf::uint64 value) {
  set_has_remoteid();
  remoteid_ = value;
}

// optional string content = 2;
inline bool UserSendMailByid::has_content() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserSendMailByid::set_has_content() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserSendMailByid::clear_has_content() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserSendMailByid::clear_content() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& UserSendMailByid::content() const {
  return *content_;
}
inline void UserSendMailByid::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void UserSendMailByid::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void UserSendMailByid::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UserSendMailByid::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  return content_;
}
inline ::std::string* UserSendMailByid::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UserSendMailByid::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .clientmsg.enumMailType type = 3;
inline bool UserSendMailByid::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserSendMailByid::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserSendMailByid::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserSendMailByid::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::clientmsg::enumMailType UserSendMailByid::type() const {
  return static_cast< ::clientmsg::enumMailType >(type_);
}
inline void UserSendMailByid::set_type(::clientmsg::enumMailType value) {
  assert(::clientmsg::enumMailType_IsValid(value));
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// UserSendMailByName

// optional string remotename = 1;
inline bool UserSendMailByName::has_remotename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserSendMailByName::set_has_remotename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserSendMailByName::clear_has_remotename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserSendMailByName::clear_remotename() {
  if (remotename_ != &::google::protobuf::internal::kEmptyString) {
    remotename_->clear();
  }
  clear_has_remotename();
}
inline const ::std::string& UserSendMailByName::remotename() const {
  return *remotename_;
}
inline void UserSendMailByName::set_remotename(const ::std::string& value) {
  set_has_remotename();
  if (remotename_ == &::google::protobuf::internal::kEmptyString) {
    remotename_ = new ::std::string;
  }
  remotename_->assign(value);
}
inline void UserSendMailByName::set_remotename(const char* value) {
  set_has_remotename();
  if (remotename_ == &::google::protobuf::internal::kEmptyString) {
    remotename_ = new ::std::string;
  }
  remotename_->assign(value);
}
inline void UserSendMailByName::set_remotename(const char* value, size_t size) {
  set_has_remotename();
  if (remotename_ == &::google::protobuf::internal::kEmptyString) {
    remotename_ = new ::std::string;
  }
  remotename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UserSendMailByName::mutable_remotename() {
  set_has_remotename();
  if (remotename_ == &::google::protobuf::internal::kEmptyString) {
    remotename_ = new ::std::string;
  }
  return remotename_;
}
inline ::std::string* UserSendMailByName::release_remotename() {
  clear_has_remotename();
  if (remotename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = remotename_;
    remotename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UserSendMailByName::set_allocated_remotename(::std::string* remotename) {
  if (remotename_ != &::google::protobuf::internal::kEmptyString) {
    delete remotename_;
  }
  if (remotename) {
    set_has_remotename();
    remotename_ = remotename;
  } else {
    clear_has_remotename();
    remotename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string content = 2;
inline bool UserSendMailByName::has_content() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserSendMailByName::set_has_content() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserSendMailByName::clear_has_content() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserSendMailByName::clear_content() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& UserSendMailByName::content() const {
  return *content_;
}
inline void UserSendMailByName::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void UserSendMailByName::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void UserSendMailByName::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UserSendMailByName::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  return content_;
}
inline ::std::string* UserSendMailByName::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UserSendMailByName::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .clientmsg.enumMailType type = 3;
inline bool UserSendMailByName::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserSendMailByName::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserSendMailByName::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserSendMailByName::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::clientmsg::enumMailType UserSendMailByName::type() const {
  return static_cast< ::clientmsg::enumMailType >(type_);
}
inline void UserSendMailByName::set_type(::clientmsg::enumMailType value) {
  assert(::clientmsg::enumMailType_IsValid(value));
  set_has_type();
  type_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace clientmsg

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::clientmsg::enumMailType>() {
  return ::clientmsg::enumMailType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mail_2eproto__INCLUDED

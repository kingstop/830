// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_game_db.proto

#ifndef PROTOBUF_msg_5fgame_5fdb_2eproto__INCLUDED
#define PROTOBUF_msg_5fgame_5fdb_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "msg_gate_login.pb.h"
#include "player_define.pb.h"
// @@protoc_insertion_point(includes)

namespace msgs2s {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_msg_5fgame_5fdb_2eproto();
void protobuf_AssignDesc_msg_5fgame_5fdb_2eproto();
void protobuf_ShutdownFile_msg_5fgame_5fdb_2eproto();

class MsgGS2DBQueryChar;
class MsgDB2GSQueryCharResult;
class DBPlayerData;
class MsgGS2DBSavePlaye;
class MsgGS2DBChangeServer;

enum LineState {
  _ON_LINE_ = 1,
  _OFF_LINE = 2
};
bool LineState_IsValid(int value);
const LineState LineState_MIN = _ON_LINE_;
const LineState LineState_MAX = _OFF_LINE;
const int LineState_ARRAYSIZE = LineState_MAX + 1;

const ::google::protobuf::EnumDescriptor* LineState_descriptor();
inline const ::std::string& LineState_Name(LineState value) {
  return ::google::protobuf::internal::NameOfEnum(
    LineState_descriptor(), value);
}
inline bool LineState_Parse(
    const ::std::string& name, LineState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LineState>(
    LineState_descriptor(), name, value);
}
// ===================================================================

class MsgGS2DBQueryChar : public ::google::protobuf::Message {
 public:
  MsgGS2DBQueryChar();
  virtual ~MsgGS2DBQueryChar();

  MsgGS2DBQueryChar(const MsgGS2DBQueryChar& from);

  inline MsgGS2DBQueryChar& operator=(const MsgGS2DBQueryChar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgGS2DBQueryChar& default_instance();

  void Swap(MsgGS2DBQueryChar* other);

  // implements Message ----------------------------------------------

  MsgGS2DBQueryChar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgGS2DBQueryChar& from);
  void MergeFrom(const MsgGS2DBQueryChar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .msgs2s.GTLGData data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::msgs2s::GTLGData& data() const;
  inline ::msgs2s::GTLGData* mutable_data();
  inline ::msgs2s::GTLGData* release_data();
  inline void set_allocated_data(::msgs2s::GTLGData* data);

  // @@protoc_insertion_point(class_scope:msgs2s.MsgGS2DBQueryChar)
 private:
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::msgs2s::GTLGData* data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fgame_5fdb_2eproto();
  friend void protobuf_AssignDesc_msg_5fgame_5fdb_2eproto();
  friend void protobuf_ShutdownFile_msg_5fgame_5fdb_2eproto();

  void InitAsDefaultInstance();
  static MsgGS2DBQueryChar* default_instance_;
};
// -------------------------------------------------------------------

class MsgDB2GSQueryCharResult : public ::google::protobuf::Message {
 public:
  MsgDB2GSQueryCharResult();
  virtual ~MsgDB2GSQueryCharResult();

  MsgDB2GSQueryCharResult(const MsgDB2GSQueryCharResult& from);

  inline MsgDB2GSQueryCharResult& operator=(const MsgDB2GSQueryCharResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgDB2GSQueryCharResult& default_instance();

  void Swap(MsgDB2GSQueryCharResult* other);

  // implements Message ----------------------------------------------

  MsgDB2GSQueryCharResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgDB2GSQueryCharResult& from);
  void MergeFrom(const MsgDB2GSQueryCharResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msgs2s.PlayerInfo info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::msgs2s::PlayerInfo& info() const;
  inline ::msgs2s::PlayerInfo* mutable_info();
  inline ::msgs2s::PlayerInfo* release_info();
  inline void set_allocated_info(::msgs2s::PlayerInfo* info);

  // required uint32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:msgs2s.MsgDB2GSQueryCharResult)
 private:
  inline void set_has_info();
  inline void clear_has_info();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::msgs2s::PlayerInfo* info_;
  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fgame_5fdb_2eproto();
  friend void protobuf_AssignDesc_msg_5fgame_5fdb_2eproto();
  friend void protobuf_ShutdownFile_msg_5fgame_5fdb_2eproto();

  void InitAsDefaultInstance();
  static MsgDB2GSQueryCharResult* default_instance_;
};
// -------------------------------------------------------------------

class DBPlayerData : public ::google::protobuf::Message {
 public:
  DBPlayerData();
  virtual ~DBPlayerData();

  DBPlayerData(const DBPlayerData& from);

  inline DBPlayerData& operator=(const DBPlayerData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBPlayerData& default_instance();

  void Swap(DBPlayerData* other);

  // implements Message ----------------------------------------------

  DBPlayerData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBPlayerData& from);
  void MergeFrom(const DBPlayerData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .msgs2s.PlayerInfo data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::msgs2s::PlayerInfo& data() const;
  inline ::msgs2s::PlayerInfo* mutable_data();
  inline ::msgs2s::PlayerInfo* release_data();
  inline void set_allocated_data(::msgs2s::PlayerInfo* data);

  // required .msgs2s.LineState state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::msgs2s::LineState state() const;
  inline void set_state(::msgs2s::LineState value);

  // @@protoc_insertion_point(class_scope:msgs2s.DBPlayerData)
 private:
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::msgs2s::PlayerInfo* data_;
  int state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fgame_5fdb_2eproto();
  friend void protobuf_AssignDesc_msg_5fgame_5fdb_2eproto();
  friend void protobuf_ShutdownFile_msg_5fgame_5fdb_2eproto();

  void InitAsDefaultInstance();
  static DBPlayerData* default_instance_;
};
// -------------------------------------------------------------------

class MsgGS2DBSavePlaye : public ::google::protobuf::Message {
 public:
  MsgGS2DBSavePlaye();
  virtual ~MsgGS2DBSavePlaye();

  MsgGS2DBSavePlaye(const MsgGS2DBSavePlaye& from);

  inline MsgGS2DBSavePlaye& operator=(const MsgGS2DBSavePlaye& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgGS2DBSavePlaye& default_instance();

  void Swap(MsgGS2DBSavePlaye* other);

  // implements Message ----------------------------------------------

  MsgGS2DBSavePlaye* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgGS2DBSavePlaye& from);
  void MergeFrom(const MsgGS2DBSavePlaye& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .msgs2s.DBPlayerData players = 1;
  inline int players_size() const;
  inline void clear_players();
  static const int kPlayersFieldNumber = 1;
  inline const ::msgs2s::DBPlayerData& players(int index) const;
  inline ::msgs2s::DBPlayerData* mutable_players(int index);
  inline ::msgs2s::DBPlayerData* add_players();
  inline const ::google::protobuf::RepeatedPtrField< ::msgs2s::DBPlayerData >&
      players() const;
  inline ::google::protobuf::RepeatedPtrField< ::msgs2s::DBPlayerData >*
      mutable_players();

  // @@protoc_insertion_point(class_scope:msgs2s.MsgGS2DBSavePlaye)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::msgs2s::DBPlayerData > players_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fgame_5fdb_2eproto();
  friend void protobuf_AssignDesc_msg_5fgame_5fdb_2eproto();
  friend void protobuf_ShutdownFile_msg_5fgame_5fdb_2eproto();

  void InitAsDefaultInstance();
  static MsgGS2DBSavePlaye* default_instance_;
};
// -------------------------------------------------------------------

class MsgGS2DBChangeServer : public ::google::protobuf::Message {
 public:
  MsgGS2DBChangeServer();
  virtual ~MsgGS2DBChangeServer();

  MsgGS2DBChangeServer(const MsgGS2DBChangeServer& from);

  inline MsgGS2DBChangeServer& operator=(const MsgGS2DBChangeServer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgGS2DBChangeServer& default_instance();

  void Swap(MsgGS2DBChangeServer* other);

  // implements Message ----------------------------------------------

  MsgGS2DBChangeServer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgGS2DBChangeServer& from);
  void MergeFrom(const MsgGS2DBChangeServer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 city = 1;
  inline bool has_city() const;
  inline void clear_city();
  static const int kCityFieldNumber = 1;
  inline ::google::protobuf::uint32 city() const;
  inline void set_city(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:msgs2s.MsgGS2DBChangeServer)
 private:
  inline void set_has_city();
  inline void clear_has_city();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 city_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msg_5fgame_5fdb_2eproto();
  friend void protobuf_AssignDesc_msg_5fgame_5fdb_2eproto();
  friend void protobuf_ShutdownFile_msg_5fgame_5fdb_2eproto();

  void InitAsDefaultInstance();
  static MsgGS2DBChangeServer* default_instance_;
};
// ===================================================================


// ===================================================================

// MsgGS2DBQueryChar

// required .msgs2s.GTLGData data = 1;
inline bool MsgGS2DBQueryChar::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgGS2DBQueryChar::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgGS2DBQueryChar::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgGS2DBQueryChar::clear_data() {
  if (data_ != NULL) data_->::msgs2s::GTLGData::Clear();
  clear_has_data();
}
inline const ::msgs2s::GTLGData& MsgGS2DBQueryChar::data() const {
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::msgs2s::GTLGData* MsgGS2DBQueryChar::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::msgs2s::GTLGData;
  return data_;
}
inline ::msgs2s::GTLGData* MsgGS2DBQueryChar::release_data() {
  clear_has_data();
  ::msgs2s::GTLGData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void MsgGS2DBQueryChar::set_allocated_data(::msgs2s::GTLGData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
}

// -------------------------------------------------------------------

// MsgDB2GSQueryCharResult

// optional .msgs2s.PlayerInfo info = 1;
inline bool MsgDB2GSQueryCharResult::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgDB2GSQueryCharResult::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgDB2GSQueryCharResult::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgDB2GSQueryCharResult::clear_info() {
  if (info_ != NULL) info_->::msgs2s::PlayerInfo::Clear();
  clear_has_info();
}
inline const ::msgs2s::PlayerInfo& MsgDB2GSQueryCharResult::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::msgs2s::PlayerInfo* MsgDB2GSQueryCharResult::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::msgs2s::PlayerInfo;
  return info_;
}
inline ::msgs2s::PlayerInfo* MsgDB2GSQueryCharResult::release_info() {
  clear_has_info();
  ::msgs2s::PlayerInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void MsgDB2GSQueryCharResult::set_allocated_info(::msgs2s::PlayerInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// required uint32 result = 2;
inline bool MsgDB2GSQueryCharResult::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgDB2GSQueryCharResult::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgDB2GSQueryCharResult::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgDB2GSQueryCharResult::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 MsgDB2GSQueryCharResult::result() const {
  return result_;
}
inline void MsgDB2GSQueryCharResult::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// DBPlayerData

// required .msgs2s.PlayerInfo data = 1;
inline bool DBPlayerData::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBPlayerData::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBPlayerData::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBPlayerData::clear_data() {
  if (data_ != NULL) data_->::msgs2s::PlayerInfo::Clear();
  clear_has_data();
}
inline const ::msgs2s::PlayerInfo& DBPlayerData::data() const {
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::msgs2s::PlayerInfo* DBPlayerData::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::msgs2s::PlayerInfo;
  return data_;
}
inline ::msgs2s::PlayerInfo* DBPlayerData::release_data() {
  clear_has_data();
  ::msgs2s::PlayerInfo* temp = data_;
  data_ = NULL;
  return temp;
}
inline void DBPlayerData::set_allocated_data(::msgs2s::PlayerInfo* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
}

// required .msgs2s.LineState state = 2;
inline bool DBPlayerData::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DBPlayerData::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DBPlayerData::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DBPlayerData::clear_state() {
  state_ = 1;
  clear_has_state();
}
inline ::msgs2s::LineState DBPlayerData::state() const {
  return static_cast< ::msgs2s::LineState >(state_);
}
inline void DBPlayerData::set_state(::msgs2s::LineState value) {
  assert(::msgs2s::LineState_IsValid(value));
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// MsgGS2DBSavePlaye

// repeated .msgs2s.DBPlayerData players = 1;
inline int MsgGS2DBSavePlaye::players_size() const {
  return players_.size();
}
inline void MsgGS2DBSavePlaye::clear_players() {
  players_.Clear();
}
inline const ::msgs2s::DBPlayerData& MsgGS2DBSavePlaye::players(int index) const {
  return players_.Get(index);
}
inline ::msgs2s::DBPlayerData* MsgGS2DBSavePlaye::mutable_players(int index) {
  return players_.Mutable(index);
}
inline ::msgs2s::DBPlayerData* MsgGS2DBSavePlaye::add_players() {
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::msgs2s::DBPlayerData >&
MsgGS2DBSavePlaye::players() const {
  return players_;
}
inline ::google::protobuf::RepeatedPtrField< ::msgs2s::DBPlayerData >*
MsgGS2DBSavePlaye::mutable_players() {
  return &players_;
}

// -------------------------------------------------------------------

// MsgGS2DBChangeServer

// required uint32 city = 1;
inline bool MsgGS2DBChangeServer::has_city() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgGS2DBChangeServer::set_has_city() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgGS2DBChangeServer::clear_has_city() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgGS2DBChangeServer::clear_city() {
  city_ = 0u;
  clear_has_city();
}
inline ::google::protobuf::uint32 MsgGS2DBChangeServer::city() const {
  return city_;
}
inline void MsgGS2DBChangeServer::set_city(::google::protobuf::uint32 value) {
  set_has_city();
  city_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace msgs2s

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msgs2s::LineState>() {
  return ::msgs2s::LineState_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_msg_5fgame_5fdb_2eproto__INCLUDED

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: map.proto

#ifndef PROTOBUF_map_2eproto__INCLUDED
#define PROTOBUF_map_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)

namespace clientmsg {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_map_2eproto();
void protobuf_AssignDesc_map_2eproto();
void protobuf_ShutdownFile_map_2eproto();

class PlayerLeaveScene;
class MapScreenRefreshCharacter;
class NineScreenRefreshPlayer;
class PlayerJoinRange;
class CharMove;
class CharMoveFailed;
class MapRemoveChar;
class CharChangeScene;
class ResponseChangeScene;
class CharGoTo;

enum enumChangeSceneResult {
  enumChangeSceneResult_Success = 1,
  enumChangeSceneResult_NotScene = 2
};
bool enumChangeSceneResult_IsValid(int value);
const enumChangeSceneResult enumChangeSceneResult_MIN = enumChangeSceneResult_Success;
const enumChangeSceneResult enumChangeSceneResult_MAX = enumChangeSceneResult_NotScene;
const int enumChangeSceneResult_ARRAYSIZE = enumChangeSceneResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* enumChangeSceneResult_descriptor();
inline const ::std::string& enumChangeSceneResult_Name(enumChangeSceneResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    enumChangeSceneResult_descriptor(), value);
}
inline bool enumChangeSceneResult_Parse(
    const ::std::string& name, enumChangeSceneResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<enumChangeSceneResult>(
    enumChangeSceneResult_descriptor(), name, value);
}
// ===================================================================

class PlayerLeaveScene : public ::google::protobuf::Message {
 public:
  PlayerLeaveScene();
  virtual ~PlayerLeaveScene();

  PlayerLeaveScene(const PlayerLeaveScene& from);

  inline PlayerLeaveScene& operator=(const PlayerLeaveScene& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerLeaveScene& default_instance();

  void Swap(PlayerLeaveScene* other);

  // implements Message ----------------------------------------------

  PlayerLeaveScene* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerLeaveScene& from);
  void MergeFrom(const PlayerLeaveScene& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:clientmsg.PlayerLeaveScene)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_map_2eproto();
  friend void protobuf_AssignDesc_map_2eproto();
  friend void protobuf_ShutdownFile_map_2eproto();

  void InitAsDefaultInstance();
  static PlayerLeaveScene* default_instance_;
};
// -------------------------------------------------------------------

class MapScreenRefreshCharacter : public ::google::protobuf::Message {
 public:
  MapScreenRefreshCharacter();
  virtual ~MapScreenRefreshCharacter();

  MapScreenRefreshCharacter(const MapScreenRefreshCharacter& from);

  inline MapScreenRefreshCharacter& operator=(const MapScreenRefreshCharacter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MapScreenRefreshCharacter& default_instance();

  void Swap(MapScreenRefreshCharacter* other);

  // implements Message ----------------------------------------------

  MapScreenRefreshCharacter* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MapScreenRefreshCharacter& from);
  void MergeFrom(const MapScreenRefreshCharacter& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MapCharInfo mapinfo = 1;
  inline bool has_mapinfo() const;
  inline void clear_mapinfo();
  static const int kMapinfoFieldNumber = 1;
  inline const ::MapCharInfo& mapinfo() const;
  inline ::MapCharInfo* mutable_mapinfo();
  inline ::MapCharInfo* release_mapinfo();
  inline void set_allocated_mapinfo(::MapCharInfo* mapinfo);

  // optional uint32 mapid = 2;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 2;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // optional uint32 cityid = 3;
  inline bool has_cityid() const;
  inline void clear_cityid();
  static const int kCityidFieldNumber = 3;
  inline ::google::protobuf::uint32 cityid() const;
  inline void set_cityid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:clientmsg.MapScreenRefreshCharacter)
 private:
  inline void set_has_mapinfo();
  inline void clear_has_mapinfo();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_cityid();
  inline void clear_has_cityid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::MapCharInfo* mapinfo_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 cityid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_map_2eproto();
  friend void protobuf_AssignDesc_map_2eproto();
  friend void protobuf_ShutdownFile_map_2eproto();

  void InitAsDefaultInstance();
  static MapScreenRefreshCharacter* default_instance_;
};
// -------------------------------------------------------------------

class NineScreenRefreshPlayer : public ::google::protobuf::Message {
 public:
  NineScreenRefreshPlayer();
  virtual ~NineScreenRefreshPlayer();

  NineScreenRefreshPlayer(const NineScreenRefreshPlayer& from);

  inline NineScreenRefreshPlayer& operator=(const NineScreenRefreshPlayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NineScreenRefreshPlayer& default_instance();

  void Swap(NineScreenRefreshPlayer* other);

  // implements Message ----------------------------------------------

  NineScreenRefreshPlayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NineScreenRefreshPlayer& from);
  void MergeFrom(const NineScreenRefreshPlayer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MapCharInfo users = 1;
  inline int users_size() const;
  inline void clear_users();
  static const int kUsersFieldNumber = 1;
  inline const ::MapCharInfo& users(int index) const;
  inline ::MapCharInfo* mutable_users(int index);
  inline ::MapCharInfo* add_users();
  inline const ::google::protobuf::RepeatedPtrField< ::MapCharInfo >&
      users() const;
  inline ::google::protobuf::RepeatedPtrField< ::MapCharInfo >*
      mutable_users();

  // @@protoc_insertion_point(class_scope:clientmsg.NineScreenRefreshPlayer)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::MapCharInfo > users_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_map_2eproto();
  friend void protobuf_AssignDesc_map_2eproto();
  friend void protobuf_ShutdownFile_map_2eproto();

  void InitAsDefaultInstance();
  static NineScreenRefreshPlayer* default_instance_;
};
// -------------------------------------------------------------------

class PlayerJoinRange : public ::google::protobuf::Message {
 public:
  PlayerJoinRange();
  virtual ~PlayerJoinRange();

  PlayerJoinRange(const PlayerJoinRange& from);

  inline PlayerJoinRange& operator=(const PlayerJoinRange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerJoinRange& default_instance();

  void Swap(PlayerJoinRange* other);

  // implements Message ----------------------------------------------

  PlayerJoinRange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerJoinRange& from);
  void MergeFrom(const PlayerJoinRange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MapCharInfo _joinUser = 1;
  inline bool has__joinuser() const;
  inline void clear__joinuser();
  static const int kJoinUserFieldNumber = 1;
  inline const ::MapCharInfo& _joinuser() const;
  inline ::MapCharInfo* mutable__joinuser();
  inline ::MapCharInfo* release__joinuser();
  inline void set_allocated__joinuser(::MapCharInfo* _joinuser);

  // @@protoc_insertion_point(class_scope:clientmsg.PlayerJoinRange)
 private:
  inline void set_has__joinuser();
  inline void clear_has__joinuser();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::MapCharInfo* _joinuser_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_map_2eproto();
  friend void protobuf_AssignDesc_map_2eproto();
  friend void protobuf_ShutdownFile_map_2eproto();

  void InitAsDefaultInstance();
  static PlayerJoinRange* default_instance_;
};
// -------------------------------------------------------------------

class CharMove : public ::google::protobuf::Message {
 public:
  CharMove();
  virtual ~CharMove();

  CharMove(const CharMove& from);

  inline CharMove& operator=(const CharMove& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharMove& default_instance();

  void Swap(CharMove* other);

  // implements Message ----------------------------------------------

  CharMove* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharMove& from);
  void MergeFrom(const CharMove& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);

  // optional float dir = 2;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 2;
  inline float dir() const;
  inline void set_dir(float value);

  // optional float x = 3;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 3;
  inline float x() const;
  inline void set_x(float value);

  // optional float y = 4;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 4;
  inline float y() const;
  inline void set_y(float value);

  // optional float speed = 5;
  inline bool has_speed() const;
  inline void clear_speed();
  static const int kSpeedFieldNumber = 5;
  inline float speed() const;
  inline void set_speed(float value);

  // optional uint32 timestamp = 6;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 6;
  inline ::google::protobuf::uint32 timestamp() const;
  inline void set_timestamp(::google::protobuf::uint32 value);

  // optional uint32 state = 7;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 7;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:clientmsg.CharMove)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_dir();
  inline void clear_has_dir();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_speed();
  inline void clear_has_speed();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 charid_;
  float dir_;
  float x_;
  float y_;
  float speed_;
  ::google::protobuf::uint32 timestamp_;
  ::google::protobuf::uint32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_map_2eproto();
  friend void protobuf_AssignDesc_map_2eproto();
  friend void protobuf_ShutdownFile_map_2eproto();

  void InitAsDefaultInstance();
  static CharMove* default_instance_;
};
// -------------------------------------------------------------------

class CharMoveFailed : public ::google::protobuf::Message {
 public:
  CharMoveFailed();
  virtual ~CharMoveFailed();

  CharMoveFailed(const CharMoveFailed& from);

  inline CharMoveFailed& operator=(const CharMoveFailed& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharMoveFailed& default_instance();

  void Swap(CharMoveFailed* other);

  // implements Message ----------------------------------------------

  CharMoveFailed* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharMoveFailed& from);
  void MergeFrom(const CharMoveFailed& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline ::google::protobuf::uint32 x() const;
  inline void set_x(::google::protobuf::uint32 value);

  // optional uint32 y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline ::google::protobuf::uint32 y() const;
  inline void set_y(::google::protobuf::uint32 value);

  // optional uint32 speed = 3;
  inline bool has_speed() const;
  inline void clear_speed();
  static const int kSpeedFieldNumber = 3;
  inline ::google::protobuf::uint32 speed() const;
  inline void set_speed(::google::protobuf::uint32 value);

  // optional float dir = 4;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 4;
  inline float dir() const;
  inline void set_dir(float value);

  // optional uint32 timestamp = 5;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 5;
  inline ::google::protobuf::uint32 timestamp() const;
  inline void set_timestamp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:clientmsg.CharMoveFailed)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_speed();
  inline void clear_has_speed();
  inline void set_has_dir();
  inline void clear_has_dir();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;
  ::google::protobuf::uint32 speed_;
  float dir_;
  ::google::protobuf::uint32 timestamp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_map_2eproto();
  friend void protobuf_AssignDesc_map_2eproto();
  friend void protobuf_ShutdownFile_map_2eproto();

  void InitAsDefaultInstance();
  static CharMoveFailed* default_instance_;
};
// -------------------------------------------------------------------

class MapRemoveChar : public ::google::protobuf::Message {
 public:
  MapRemoveChar();
  virtual ~MapRemoveChar();

  MapRemoveChar(const MapRemoveChar& from);

  inline MapRemoveChar& operator=(const MapRemoveChar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MapRemoveChar& default_instance();

  void Swap(MapRemoveChar* other);

  // implements Message ----------------------------------------------

  MapRemoveChar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MapRemoveChar& from);
  void MergeFrom(const MapRemoveChar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 users = 1;
  inline int users_size() const;
  inline void clear_users();
  static const int kUsersFieldNumber = 1;
  inline ::google::protobuf::uint32 users(int index) const;
  inline void set_users(int index, ::google::protobuf::uint32 value);
  inline void add_users(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      users() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_users();

  // @@protoc_insertion_point(class_scope:clientmsg.MapRemoveChar)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > users_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_map_2eproto();
  friend void protobuf_AssignDesc_map_2eproto();
  friend void protobuf_ShutdownFile_map_2eproto();

  void InitAsDefaultInstance();
  static MapRemoveChar* default_instance_;
};
// -------------------------------------------------------------------

class CharChangeScene : public ::google::protobuf::Message {
 public:
  CharChangeScene();
  virtual ~CharChangeScene();

  CharChangeScene(const CharChangeScene& from);

  inline CharChangeScene& operator=(const CharChangeScene& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharChangeScene& default_instance();

  void Swap(CharChangeScene* other);

  // implements Message ----------------------------------------------

  CharChangeScene* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharChangeScene& from);
  void MergeFrom(const CharChangeScene& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 cityid = 1;
  inline bool has_cityid() const;
  inline void clear_cityid();
  static const int kCityidFieldNumber = 1;
  inline ::google::protobuf::uint32 cityid() const;
  inline void set_cityid(::google::protobuf::uint32 value);

  // optional uint32 mapid = 2;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 2;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // optional uint32 x = 3;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 3;
  inline ::google::protobuf::uint32 x() const;
  inline void set_x(::google::protobuf::uint32 value);

  // optional uint32 y = 4;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 4;
  inline ::google::protobuf::uint32 y() const;
  inline void set_y(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:clientmsg.CharChangeScene)
 private:
  inline void set_has_cityid();
  inline void clear_has_cityid();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 cityid_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_map_2eproto();
  friend void protobuf_AssignDesc_map_2eproto();
  friend void protobuf_ShutdownFile_map_2eproto();

  void InitAsDefaultInstance();
  static CharChangeScene* default_instance_;
};
// -------------------------------------------------------------------

class ResponseChangeScene : public ::google::protobuf::Message {
 public:
  ResponseChangeScene();
  virtual ~ResponseChangeScene();

  ResponseChangeScene(const ResponseChangeScene& from);

  inline ResponseChangeScene& operator=(const ResponseChangeScene& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseChangeScene& default_instance();

  void Swap(ResponseChangeScene* other);

  // implements Message ----------------------------------------------

  ResponseChangeScene* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResponseChangeScene& from);
  void MergeFrom(const ResponseChangeScene& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mapid = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 1;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // optional uint32 cityid = 2;
  inline bool has_cityid() const;
  inline void clear_cityid();
  static const int kCityidFieldNumber = 2;
  inline ::google::protobuf::uint32 cityid() const;
  inline void set_cityid(::google::protobuf::uint32 value);

  // optional uint32 x = 3;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 3;
  inline ::google::protobuf::uint32 x() const;
  inline void set_x(::google::protobuf::uint32 value);

  // optional uint32 y = 4;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 4;
  inline ::google::protobuf::uint32 y() const;
  inline void set_y(::google::protobuf::uint32 value);

  // optional .clientmsg.enumChangeSceneResult result = 5;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 5;
  inline ::clientmsg::enumChangeSceneResult result() const;
  inline void set_result(::clientmsg::enumChangeSceneResult value);

  // @@protoc_insertion_point(class_scope:clientmsg.ResponseChangeScene)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_cityid();
  inline void clear_has_cityid();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 cityid_;
  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;
  int result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_map_2eproto();
  friend void protobuf_AssignDesc_map_2eproto();
  friend void protobuf_ShutdownFile_map_2eproto();

  void InitAsDefaultInstance();
  static ResponseChangeScene* default_instance_;
};
// -------------------------------------------------------------------

class CharGoTo : public ::google::protobuf::Message {
 public:
  CharGoTo();
  virtual ~CharGoTo();

  CharGoTo(const CharGoTo& from);

  inline CharGoTo& operator=(const CharGoTo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharGoTo& default_instance();

  void Swap(CharGoTo* other);

  // implements Message ----------------------------------------------

  CharGoTo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharGoTo& from);
  void MergeFrom(const CharGoTo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline ::google::protobuf::uint32 x() const;
  inline void set_x(::google::protobuf::uint32 value);

  // optional uint32 y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline ::google::protobuf::uint32 y() const;
  inline void set_y(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:clientmsg.CharGoTo)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_map_2eproto();
  friend void protobuf_AssignDesc_map_2eproto();
  friend void protobuf_ShutdownFile_map_2eproto();

  void InitAsDefaultInstance();
  static CharGoTo* default_instance_;
};
// ===================================================================


// ===================================================================

// PlayerLeaveScene

// -------------------------------------------------------------------

// MapScreenRefreshCharacter

// optional .MapCharInfo mapinfo = 1;
inline bool MapScreenRefreshCharacter::has_mapinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MapScreenRefreshCharacter::set_has_mapinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MapScreenRefreshCharacter::clear_has_mapinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MapScreenRefreshCharacter::clear_mapinfo() {
  if (mapinfo_ != NULL) mapinfo_->::MapCharInfo::Clear();
  clear_has_mapinfo();
}
inline const ::MapCharInfo& MapScreenRefreshCharacter::mapinfo() const {
  return mapinfo_ != NULL ? *mapinfo_ : *default_instance_->mapinfo_;
}
inline ::MapCharInfo* MapScreenRefreshCharacter::mutable_mapinfo() {
  set_has_mapinfo();
  if (mapinfo_ == NULL) mapinfo_ = new ::MapCharInfo;
  return mapinfo_;
}
inline ::MapCharInfo* MapScreenRefreshCharacter::release_mapinfo() {
  clear_has_mapinfo();
  ::MapCharInfo* temp = mapinfo_;
  mapinfo_ = NULL;
  return temp;
}
inline void MapScreenRefreshCharacter::set_allocated_mapinfo(::MapCharInfo* mapinfo) {
  delete mapinfo_;
  mapinfo_ = mapinfo;
  if (mapinfo) {
    set_has_mapinfo();
  } else {
    clear_has_mapinfo();
  }
}

// optional uint32 mapid = 2;
inline bool MapScreenRefreshCharacter::has_mapid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MapScreenRefreshCharacter::set_has_mapid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MapScreenRefreshCharacter::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MapScreenRefreshCharacter::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 MapScreenRefreshCharacter::mapid() const {
  return mapid_;
}
inline void MapScreenRefreshCharacter::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional uint32 cityid = 3;
inline bool MapScreenRefreshCharacter::has_cityid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MapScreenRefreshCharacter::set_has_cityid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MapScreenRefreshCharacter::clear_has_cityid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MapScreenRefreshCharacter::clear_cityid() {
  cityid_ = 0u;
  clear_has_cityid();
}
inline ::google::protobuf::uint32 MapScreenRefreshCharacter::cityid() const {
  return cityid_;
}
inline void MapScreenRefreshCharacter::set_cityid(::google::protobuf::uint32 value) {
  set_has_cityid();
  cityid_ = value;
}

// -------------------------------------------------------------------

// NineScreenRefreshPlayer

// repeated .MapCharInfo users = 1;
inline int NineScreenRefreshPlayer::users_size() const {
  return users_.size();
}
inline void NineScreenRefreshPlayer::clear_users() {
  users_.Clear();
}
inline const ::MapCharInfo& NineScreenRefreshPlayer::users(int index) const {
  return users_.Get(index);
}
inline ::MapCharInfo* NineScreenRefreshPlayer::mutable_users(int index) {
  return users_.Mutable(index);
}
inline ::MapCharInfo* NineScreenRefreshPlayer::add_users() {
  return users_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MapCharInfo >&
NineScreenRefreshPlayer::users() const {
  return users_;
}
inline ::google::protobuf::RepeatedPtrField< ::MapCharInfo >*
NineScreenRefreshPlayer::mutable_users() {
  return &users_;
}

// -------------------------------------------------------------------

// PlayerJoinRange

// optional .MapCharInfo _joinUser = 1;
inline bool PlayerJoinRange::has__joinuser() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerJoinRange::set_has__joinuser() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerJoinRange::clear_has__joinuser() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerJoinRange::clear__joinuser() {
  if (_joinuser_ != NULL) _joinuser_->::MapCharInfo::Clear();
  clear_has__joinuser();
}
inline const ::MapCharInfo& PlayerJoinRange::_joinuser() const {
  return _joinuser_ != NULL ? *_joinuser_ : *default_instance_->_joinuser_;
}
inline ::MapCharInfo* PlayerJoinRange::mutable__joinuser() {
  set_has__joinuser();
  if (_joinuser_ == NULL) _joinuser_ = new ::MapCharInfo;
  return _joinuser_;
}
inline ::MapCharInfo* PlayerJoinRange::release__joinuser() {
  clear_has__joinuser();
  ::MapCharInfo* temp = _joinuser_;
  _joinuser_ = NULL;
  return temp;
}
inline void PlayerJoinRange::set_allocated__joinuser(::MapCharInfo* _joinuser) {
  delete _joinuser_;
  _joinuser_ = _joinuser;
  if (_joinuser) {
    set_has__joinuser();
  } else {
    clear_has__joinuser();
  }
}

// -------------------------------------------------------------------

// CharMove

// optional uint32 charid = 1;
inline bool CharMove::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharMove::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharMove::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharMove::clear_charid() {
  charid_ = 0u;
  clear_has_charid();
}
inline ::google::protobuf::uint32 CharMove::charid() const {
  return charid_;
}
inline void CharMove::set_charid(::google::protobuf::uint32 value) {
  set_has_charid();
  charid_ = value;
}

// optional float dir = 2;
inline bool CharMove::has_dir() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharMove::set_has_dir() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharMove::clear_has_dir() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharMove::clear_dir() {
  dir_ = 0;
  clear_has_dir();
}
inline float CharMove::dir() const {
  return dir_;
}
inline void CharMove::set_dir(float value) {
  set_has_dir();
  dir_ = value;
}

// optional float x = 3;
inline bool CharMove::has_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharMove::set_has_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharMove::clear_has_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharMove::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float CharMove::x() const {
  return x_;
}
inline void CharMove::set_x(float value) {
  set_has_x();
  x_ = value;
}

// optional float y = 4;
inline bool CharMove::has_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharMove::set_has_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharMove::clear_has_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharMove::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float CharMove::y() const {
  return y_;
}
inline void CharMove::set_y(float value) {
  set_has_y();
  y_ = value;
}

// optional float speed = 5;
inline bool CharMove::has_speed() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CharMove::set_has_speed() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CharMove::clear_has_speed() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CharMove::clear_speed() {
  speed_ = 0;
  clear_has_speed();
}
inline float CharMove::speed() const {
  return speed_;
}
inline void CharMove::set_speed(float value) {
  set_has_speed();
  speed_ = value;
}

// optional uint32 timestamp = 6;
inline bool CharMove::has_timestamp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CharMove::set_has_timestamp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CharMove::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CharMove::clear_timestamp() {
  timestamp_ = 0u;
  clear_has_timestamp();
}
inline ::google::protobuf::uint32 CharMove::timestamp() const {
  return timestamp_;
}
inline void CharMove::set_timestamp(::google::protobuf::uint32 value) {
  set_has_timestamp();
  timestamp_ = value;
}

// optional uint32 state = 7;
inline bool CharMove::has_state() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CharMove::set_has_state() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CharMove::clear_has_state() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CharMove::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 CharMove::state() const {
  return state_;
}
inline void CharMove::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// CharMoveFailed

// optional uint32 x = 1;
inline bool CharMoveFailed::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharMoveFailed::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharMoveFailed::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharMoveFailed::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 CharMoveFailed::x() const {
  return x_;
}
inline void CharMoveFailed::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
}

// optional uint32 y = 2;
inline bool CharMoveFailed::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharMoveFailed::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharMoveFailed::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharMoveFailed::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 CharMoveFailed::y() const {
  return y_;
}
inline void CharMoveFailed::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
}

// optional uint32 speed = 3;
inline bool CharMoveFailed::has_speed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharMoveFailed::set_has_speed() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharMoveFailed::clear_has_speed() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharMoveFailed::clear_speed() {
  speed_ = 0u;
  clear_has_speed();
}
inline ::google::protobuf::uint32 CharMoveFailed::speed() const {
  return speed_;
}
inline void CharMoveFailed::set_speed(::google::protobuf::uint32 value) {
  set_has_speed();
  speed_ = value;
}

// optional float dir = 4;
inline bool CharMoveFailed::has_dir() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharMoveFailed::set_has_dir() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharMoveFailed::clear_has_dir() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharMoveFailed::clear_dir() {
  dir_ = 0;
  clear_has_dir();
}
inline float CharMoveFailed::dir() const {
  return dir_;
}
inline void CharMoveFailed::set_dir(float value) {
  set_has_dir();
  dir_ = value;
}

// optional uint32 timestamp = 5;
inline bool CharMoveFailed::has_timestamp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CharMoveFailed::set_has_timestamp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CharMoveFailed::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CharMoveFailed::clear_timestamp() {
  timestamp_ = 0u;
  clear_has_timestamp();
}
inline ::google::protobuf::uint32 CharMoveFailed::timestamp() const {
  return timestamp_;
}
inline void CharMoveFailed::set_timestamp(::google::protobuf::uint32 value) {
  set_has_timestamp();
  timestamp_ = value;
}

// -------------------------------------------------------------------

// MapRemoveChar

// repeated uint32 users = 1;
inline int MapRemoveChar::users_size() const {
  return users_.size();
}
inline void MapRemoveChar::clear_users() {
  users_.Clear();
}
inline ::google::protobuf::uint32 MapRemoveChar::users(int index) const {
  return users_.Get(index);
}
inline void MapRemoveChar::set_users(int index, ::google::protobuf::uint32 value) {
  users_.Set(index, value);
}
inline void MapRemoveChar::add_users(::google::protobuf::uint32 value) {
  users_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MapRemoveChar::users() const {
  return users_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MapRemoveChar::mutable_users() {
  return &users_;
}

// -------------------------------------------------------------------

// CharChangeScene

// optional uint32 cityid = 1;
inline bool CharChangeScene::has_cityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharChangeScene::set_has_cityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharChangeScene::clear_has_cityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharChangeScene::clear_cityid() {
  cityid_ = 0u;
  clear_has_cityid();
}
inline ::google::protobuf::uint32 CharChangeScene::cityid() const {
  return cityid_;
}
inline void CharChangeScene::set_cityid(::google::protobuf::uint32 value) {
  set_has_cityid();
  cityid_ = value;
}

// optional uint32 mapid = 2;
inline bool CharChangeScene::has_mapid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharChangeScene::set_has_mapid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharChangeScene::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharChangeScene::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 CharChangeScene::mapid() const {
  return mapid_;
}
inline void CharChangeScene::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional uint32 x = 3;
inline bool CharChangeScene::has_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharChangeScene::set_has_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharChangeScene::clear_has_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharChangeScene::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 CharChangeScene::x() const {
  return x_;
}
inline void CharChangeScene::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
}

// optional uint32 y = 4;
inline bool CharChangeScene::has_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharChangeScene::set_has_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharChangeScene::clear_has_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharChangeScene::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 CharChangeScene::y() const {
  return y_;
}
inline void CharChangeScene::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
}

// -------------------------------------------------------------------

// ResponseChangeScene

// optional uint32 mapid = 1;
inline bool ResponseChangeScene::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResponseChangeScene::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResponseChangeScene::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResponseChangeScene::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 ResponseChangeScene::mapid() const {
  return mapid_;
}
inline void ResponseChangeScene::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional uint32 cityid = 2;
inline bool ResponseChangeScene::has_cityid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResponseChangeScene::set_has_cityid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResponseChangeScene::clear_has_cityid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResponseChangeScene::clear_cityid() {
  cityid_ = 0u;
  clear_has_cityid();
}
inline ::google::protobuf::uint32 ResponseChangeScene::cityid() const {
  return cityid_;
}
inline void ResponseChangeScene::set_cityid(::google::protobuf::uint32 value) {
  set_has_cityid();
  cityid_ = value;
}

// optional uint32 x = 3;
inline bool ResponseChangeScene::has_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ResponseChangeScene::set_has_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ResponseChangeScene::clear_has_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ResponseChangeScene::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 ResponseChangeScene::x() const {
  return x_;
}
inline void ResponseChangeScene::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
}

// optional uint32 y = 4;
inline bool ResponseChangeScene::has_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ResponseChangeScene::set_has_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ResponseChangeScene::clear_has_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ResponseChangeScene::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 ResponseChangeScene::y() const {
  return y_;
}
inline void ResponseChangeScene::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
}

// optional .clientmsg.enumChangeSceneResult result = 5;
inline bool ResponseChangeScene::has_result() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ResponseChangeScene::set_has_result() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ResponseChangeScene::clear_has_result() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ResponseChangeScene::clear_result() {
  result_ = 1;
  clear_has_result();
}
inline ::clientmsg::enumChangeSceneResult ResponseChangeScene::result() const {
  return static_cast< ::clientmsg::enumChangeSceneResult >(result_);
}
inline void ResponseChangeScene::set_result(::clientmsg::enumChangeSceneResult value) {
  assert(::clientmsg::enumChangeSceneResult_IsValid(value));
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// CharGoTo

// optional uint32 x = 1;
inline bool CharGoTo::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharGoTo::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharGoTo::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharGoTo::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 CharGoTo::x() const {
  return x_;
}
inline void CharGoTo::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
}

// optional uint32 y = 2;
inline bool CharGoTo::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharGoTo::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharGoTo::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharGoTo::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 CharGoTo::y() const {
  return y_;
}
inline void CharGoTo::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace clientmsg

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::clientmsg::enumChangeSceneResult>() {
  return ::clientmsg::enumChangeSceneResult_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_map_2eproto__INCLUDED
